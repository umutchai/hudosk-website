const mysql = require('mysql2/promise');

const dbConfig = {
    host: 'localhost',
    user: 'root',
    password: 'timsah67.',
    database: 'Huddosk',
    port: 3306,
    charset: 'utf8mb4'
};

async function recreateActivitiesTable() {
    const connection = await mysql.createConnection(dbConfig);
    
    try {
        console.log('üóëÔ∏è Eski activities tablosu siliniyor...');
        await connection.execute('DROP TABLE IF EXISTS activities');
        
        console.log('üèóÔ∏è Yeni activities tablosu olu≈üturuluyor...');
        const createTableQuery = `
            CREATE TABLE activities (
                id INT AUTO_INCREMENT PRIMARY KEY,
                title VARCHAR(255) NOT NULL COMMENT 'Faaliyet ba≈ülƒ±ƒüƒ±',
                activity_date DATE NOT NULL COMMENT 'Faaliyet tarihi',
                region VARCHAR(255) COMMENT 'B√∂lge',
                route VARCHAR(255) COMMENT 'Rota',
                team TEXT COMMENT 'Ekip bilgileri',
                technical_equipment TEXT COMMENT 'Teknik malzeme listesi',
                weather_conditions VARCHAR(255) COMMENT 'Hava durumu',
                report_writer VARCHAR(255) COMMENT 'Raporu yazan ki≈üi',
                
                pre_activity_description TEXT COMMENT 'Faaliyet √∂ncesi a√ßƒ±klama',
                pre_activity_photos JSON COMMENT 'Faaliyet √∂ncesi fotoƒüraflar',
                
                report_description TEXT COMMENT 'Rapor a√ßƒ±klamasƒ±',
                report_photos JSON COMMENT 'Rapor fotoƒüraflarƒ±',
                
                descent_description TEXT COMMENT 'ƒ∞ni≈ü a√ßƒ±klamasƒ±',
                descent_photos JSON COMMENT 'ƒ∞ni≈ü fotoƒüraflarƒ±',
                
                opinions TEXT COMMENT 'G√∂r√º≈üler',
                opinion_photos JSON COMMENT 'G√∂r√º≈ü fotoƒüraflarƒ±',
                
                status ENUM('active', 'inactive') DEFAULT 'active',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
            )
        `;
        
        await connection.execute(createTableQuery);
        console.log('‚úÖ Activities tablosu ba≈üarƒ±yla olu≈üturuldu');
        
        // √ñrnek veri ekle
        console.log('üìù √ñrnek veri ekleniyor...');
        const insertSampleData = `
            INSERT INTO activities (
                title, activity_date, region, route, team, technical_equipment, 
                weather_conditions, report_writer, pre_activity_description,
                report_description, descent_description, opinions
            ) VALUES (
                'Parmakkaya Klasik Rota Faaliyet Raporu',
                '2024-01-15',
                'Parmakkaya, Ankara',
                'Klasik Rota',
                'Ekip Lideri: Ahmet Yƒ±lmaz\nKatƒ±lƒ±mcƒ±lar: Mehmet Demir, Ay≈üe Kaya, Ali √ñzkan',
                'Tƒ±rmanƒ±≈ü halatlarƒ±, karabinler, emniyet kemerleri, kasklar, tƒ±rmanƒ±≈ü ayakkabƒ±larƒ±',
                'G√ºne≈üli, 18¬∞C, r√ºzgar hafif',
                'Ahmet Yƒ±lmaz',
                'Faaliyet √∂ncesi gerekli hazƒ±rlƒ±klar tamamlandƒ±. T√ºm ekipmanlar kontrol edildi ve g√ºvenlik √∂nlemleri alƒ±ndƒ±.',
                'Klasik rota √ºzerinde ba≈üarƒ±lƒ± bir tƒ±rmanƒ±≈ü ger√ßekle≈ütirildi. Rota teknik a√ßƒ±dan zorlayƒ±cƒ± ancak g√ºvenliydi.',
                'ƒ∞ni≈ü sƒ±rasƒ±nda herhangi bir sorun ya≈üanmadƒ±. T√ºm g√ºvenlik prosed√ºrleri uygulandƒ±.',
                'Genel olarak ba≈üarƒ±lƒ± bir faaliyet oldu. Ekip uyumu m√ºkemmeldi ve g√ºvenlik standartlarƒ±na tam uyum saƒülandƒ±.'
            )
        `;
        
        await connection.execute(insertSampleData);
        console.log('‚úÖ √ñrnek veri ba≈üarƒ±yla eklendi');
        
        // Tablo yapƒ±sƒ±nƒ± kontrol et
        const [columns] = await connection.execute('DESCRIBE activities');
        console.log('\nüìã Tablo yapƒ±sƒ±:');
        columns.forEach(col => {
            console.log(`  - ${col.Field}: ${col.Type}`);
        });
        
    } catch (error) {
        console.error('‚ùå Hata:', error);
    } finally {
        await connection.end();
    }
}

recreateActivitiesTable(); 